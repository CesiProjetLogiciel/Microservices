version: '3.8'
        
services: 
    SQL_User:
        image: microservices:SQL_User
        build:
            context: ./SQL_User
        command: node app.js  
        environment:
            - LOGIN=
            - PASSWORD=
            - PORT=8081
            - DATABASE_URL=
        ports:
            - 8081:8081
        deploy:
            restart_policy:
                condition: always
    SQL_Paypal:
        image: microservices:SQL_Paypal
        build:
            context: ./SQL_Paypal
        command: node app.js 
        environment:
            - LOGIN=
            - PASSWORD=
            - PORT=8082
            - DATABASE_URL=
        ports:
            - 8082:8082
        deploy:
            restart_policy:
                condition: always
    SQL_DeliveryAddress:
        image: microservices:SQL_DeliveryAddress
        build:
            context: ./SQL_DeliveryAddress
        command: node app.js 
        environment:
            - LOGIN=
            - PASSWORD=
            - PORT=8083
            - DATABASE_URL=
        ports:
            - 8083:8083
        deploy:
            restart_policy:
                condition: always
    SQL_BillingAddress:
        image: microservices:SQL_BillingAddress
        build:
            context: ./SQL_BillingAddress
        command: node app.js 
        environment:
            - LOGIN=
            - PASSWORD=
            - PORT=8084
            - DATABASE_URL=
        ports:
            - 8084:8084
        deploy:
            restart_policy:
                condition: always
    SQL_Countries:
        image: microservices:SQL_Countries
        build:
            context: ./SQL_Countries
        command: node app.js 
        environment:
            - LOGIN=
            - PASSWORD=
            - PORT=8085
            - DATABASE_URL=
        ports:
            - 8085:8085
        deploy:
            restart_policy:
                condition: always
    SQL_UserTypes:
        image: microservices:SQL_UserTypes
        build:
            context: ./SQL_UserTypes
        command: node app.js 
        environment:
            - LOGIN=
            - PASSWORD=
            - PORT=8086
            - DATABASE_URL=
        ports:
            - 8086:8086
        deploy:
            restart_policy:
                condition: always
    MongoDB_Restaurant:
        image: microservices:MongoDB_Restaurant
        build:
            context: ./MongoBDRestaurant
        command: node index.js 
        environment:
            - PORT=9081
            - DATABASE_URL=
        ports:
            - 9081:9081
        deploy:
            restart_policy:
                condition: always
    MongoDB_Product:
        image: microservices:MongoDB_Product
        build:
            context: ./MongoDB_Product
        command: node index.js 
        environment:
            - PORT=9082
            - DATABASE_URL=
        ports:
            - 9082:9082
        deploy:
            restart_policy:
                condition: always
    MongoDB_Menu:
        image: microservices:MongoDB_Menu
        build:
            context: ./MongoDB_Menu
        command: node index.js 
        environment:
            - PORT=9083
            - DATABASE_URL=
        ports:
            - 9083:9083
        deploy:
            restart_policy:
                condition: always
    MongoDB_Order:
        image: microservices:MongoDB_Order
        build:
            context: ./MongoDB_Order
        command: node index.js 
        environment:
            - PORT=9084
            - DATABASE_URL=
        ports:
            - 9084:9084
        deploy:
            restart_policy:
                condition: always
    MongoDB_Delivery:
        image: microservices:MongoDB_Delivery
        build:
            context: ./MongoDB_Delivery
        command: node index.js 
        environment:
            - PORT=9085
            - DATABASE_URL=
        ports:
            - 9085:9085
        deploy:
            restart_policy:
                condition: always
    MongoDB_Notifications:
        image: microservices:MongoDB_Notifications
        build:
            context: ./MongoDB_Notifications
        command: node index.js 
        environment:
            - PORT=9086
            - DATABASE_URL=
            - MAIL_ADDRESS=
            - MAIL_PASSWORD=
            - TWILIO_ACCOUNT_SID=
            - TWILIO_AUTH_TOKEN=
            - TWILIO_NUMBER=
        ports:
            - 9086:9086
        deploy:
            restart_policy:
                condition: always
    MongoDB_Logs:
        image: microservices:MongoDB_Logs
        build:
            context: ./MongoDB_Logs
        command: node index.js 
        environment:
            - PORT=9087
            - DATABASE_URL=
        ports:
            - 9087:9087
        deploy:
            restart_policy:
                condition: always
    Payment:
        image: microservices:Payment
        build:
            context: ./Payment
        command: node index.js 
        environment:
            - PORT=10081
            - DATABASE_URL=
        ports:
            - 10081:10081
        deploy:
            restart_policy:
                condition: always
    Statistics:
        image: microservices:Statistics
        build:
            context: ./Statistics
        command: node index.js 
        environment:
            - PORT=10082
            - DATABASE_URL=
        ports:
            - 10082:10082
        deploy:
            restart_policy:
                condition: always